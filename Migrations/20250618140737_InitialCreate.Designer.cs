// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projet6.Data;

#nullable disable

namespace Projet6.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250618140737_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Projet6.Models.Entities.OperatingSystem", b =>
                {
                    b.Property<int>("OperatingSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperatingSystemId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OperatingSystemId");

                    b.ToTable("OperatingSystems");

                    b.HasData(
                        new
                        {
                            OperatingSystemId = 1,
                            Name = "Linux"
                        },
                        new
                        {
                            OperatingSystemId = 2,
                            Name = "MacOS"
                        },
                        new
                        {
                            OperatingSystemId = 3,
                            Name = "Windows"
                        },
                        new
                        {
                            OperatingSystemId = 4,
                            Name = "Android"
                        },
                        new
                        {
                            OperatingSystemId = 5,
                            Name = "iOS"
                        },
                        new
                        {
                            OperatingSystemId = 6,
                            Name = "Windows Mobile"
                        });
                });

            modelBuilder.Entity("Projet6.Models.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Name = "Trader en Herbe"
                        },
                        new
                        {
                            ProductId = 2,
                            Name = "Maître des Investissements"
                        },
                        new
                        {
                            ProductId = 3,
                            Name = "Planificateur d’Entraînement"
                        },
                        new
                        {
                            ProductId = 4,
                            Name = "Planificateur d’Anxiété Sociale"
                        });
                });

            modelBuilder.Entity("Projet6.Models.Entities.ProductVersionOperatingSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OperatingSystemId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("VersionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperatingSystemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("VersionId");

                    b.ToTable("ProductVersionOperatingSystems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OperatingSystemId = 1,
                            ProductId = 1,
                            VersionId = 1
                        },
                        new
                        {
                            Id = 2,
                            OperatingSystemId = 3,
                            ProductId = 1,
                            VersionId = 1
                        },
                        new
                        {
                            Id = 3,
                            OperatingSystemId = 1,
                            ProductId = 1,
                            VersionId = 2
                        },
                        new
                        {
                            Id = 4,
                            OperatingSystemId = 2,
                            ProductId = 1,
                            VersionId = 2
                        },
                        new
                        {
                            Id = 5,
                            OperatingSystemId = 3,
                            ProductId = 1,
                            VersionId = 2
                        },
                        new
                        {
                            Id = 6,
                            OperatingSystemId = 1,
                            ProductId = 1,
                            VersionId = 3
                        },
                        new
                        {
                            Id = 7,
                            OperatingSystemId = 2,
                            ProductId = 1,
                            VersionId = 3
                        },
                        new
                        {
                            Id = 8,
                            OperatingSystemId = 3,
                            ProductId = 1,
                            VersionId = 3
                        },
                        new
                        {
                            Id = 9,
                            OperatingSystemId = 4,
                            ProductId = 1,
                            VersionId = 3
                        },
                        new
                        {
                            Id = 10,
                            OperatingSystemId = 5,
                            ProductId = 1,
                            VersionId = 3
                        },
                        new
                        {
                            Id = 11,
                            OperatingSystemId = 6,
                            ProductId = 1,
                            VersionId = 3
                        },
                        new
                        {
                            Id = 12,
                            OperatingSystemId = 2,
                            ProductId = 1,
                            VersionId = 4
                        },
                        new
                        {
                            Id = 13,
                            OperatingSystemId = 3,
                            ProductId = 1,
                            VersionId = 4
                        },
                        new
                        {
                            Id = 14,
                            OperatingSystemId = 4,
                            ProductId = 1,
                            VersionId = 4
                        },
                        new
                        {
                            Id = 15,
                            OperatingSystemId = 5,
                            ProductId = 1,
                            VersionId = 4
                        },
                        new
                        {
                            Id = 16,
                            OperatingSystemId = 2,
                            ProductId = 2,
                            VersionId = 1
                        },
                        new
                        {
                            Id = 17,
                            OperatingSystemId = 5,
                            ProductId = 2,
                            VersionId = 1
                        },
                        new
                        {
                            Id = 18,
                            OperatingSystemId = 2,
                            ProductId = 2,
                            VersionId = 5
                        },
                        new
                        {
                            Id = 19,
                            OperatingSystemId = 4,
                            ProductId = 2,
                            VersionId = 5
                        },
                        new
                        {
                            Id = 20,
                            OperatingSystemId = 5,
                            ProductId = 2,
                            VersionId = 5
                        },
                        new
                        {
                            Id = 21,
                            OperatingSystemId = 2,
                            ProductId = 2,
                            VersionId = 6
                        },
                        new
                        {
                            Id = 22,
                            OperatingSystemId = 3,
                            ProductId = 2,
                            VersionId = 6
                        },
                        new
                        {
                            Id = 23,
                            OperatingSystemId = 4,
                            ProductId = 2,
                            VersionId = 6
                        },
                        new
                        {
                            Id = 24,
                            OperatingSystemId = 5,
                            ProductId = 2,
                            VersionId = 6
                        },
                        new
                        {
                            Id = 25,
                            OperatingSystemId = 1,
                            ProductId = 3,
                            VersionId = 1
                        },
                        new
                        {
                            Id = 26,
                            OperatingSystemId = 2,
                            ProductId = 3,
                            VersionId = 1
                        },
                        new
                        {
                            Id = 27,
                            OperatingSystemId = 1,
                            ProductId = 3,
                            VersionId = 2
                        },
                        new
                        {
                            Id = 28,
                            OperatingSystemId = 2,
                            ProductId = 3,
                            VersionId = 2
                        },
                        new
                        {
                            Id = 29,
                            OperatingSystemId = 3,
                            ProductId = 3,
                            VersionId = 2
                        },
                        new
                        {
                            Id = 30,
                            OperatingSystemId = 4,
                            ProductId = 3,
                            VersionId = 2
                        },
                        new
                        {
                            Id = 31,
                            OperatingSystemId = 5,
                            ProductId = 3,
                            VersionId = 2
                        },
                        new
                        {
                            Id = 32,
                            OperatingSystemId = 6,
                            ProductId = 3,
                            VersionId = 2
                        },
                        new
                        {
                            Id = 33,
                            OperatingSystemId = 2,
                            ProductId = 3,
                            VersionId = 5
                        },
                        new
                        {
                            Id = 34,
                            OperatingSystemId = 3,
                            ProductId = 3,
                            VersionId = 5
                        },
                        new
                        {
                            Id = 35,
                            OperatingSystemId = 4,
                            ProductId = 3,
                            VersionId = 5
                        },
                        new
                        {
                            Id = 36,
                            OperatingSystemId = 5,
                            ProductId = 3,
                            VersionId = 5
                        },
                        new
                        {
                            Id = 37,
                            OperatingSystemId = 2,
                            ProductId = 4,
                            VersionId = 1
                        },
                        new
                        {
                            Id = 38,
                            OperatingSystemId = 3,
                            ProductId = 4,
                            VersionId = 1
                        },
                        new
                        {
                            Id = 39,
                            OperatingSystemId = 4,
                            ProductId = 4,
                            VersionId = 1
                        },
                        new
                        {
                            Id = 40,
                            OperatingSystemId = 5,
                            ProductId = 4,
                            VersionId = 1
                        },
                        new
                        {
                            Id = 41,
                            OperatingSystemId = 2,
                            ProductId = 4,
                            VersionId = 2
                        },
                        new
                        {
                            Id = 42,
                            OperatingSystemId = 3,
                            ProductId = 4,
                            VersionId = 2
                        },
                        new
                        {
                            Id = 43,
                            OperatingSystemId = 4,
                            ProductId = 4,
                            VersionId = 2
                        },
                        new
                        {
                            Id = 44,
                            OperatingSystemId = 5,
                            ProductId = 4,
                            VersionId = 2
                        });
                });

            modelBuilder.Entity("Projet6.Models.Entities.Version", b =>
                {
                    b.Property<int>("VersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VersionId"));

                    b.Property<string>("VersionNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VersionId");

                    b.ToTable("Versions");

                    b.HasData(
                        new
                        {
                            VersionId = 1,
                            VersionNumber = "1.0"
                        },
                        new
                        {
                            VersionId = 2,
                            VersionNumber = "1.1"
                        },
                        new
                        {
                            VersionId = 3,
                            VersionNumber = "1.2"
                        },
                        new
                        {
                            VersionId = 4,
                            VersionNumber = "1.3"
                        },
                        new
                        {
                            VersionId = 5,
                            VersionNumber = "2.0"
                        },
                        new
                        {
                            VersionId = 6,
                            VersionNumber = "2.1"
                        });
                });

            modelBuilder.Entity("Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            Name = "En cours"
                        },
                        new
                        {
                            StatusId = 2,
                            Name = "Résolu"
                        });
                });

            modelBuilder.Entity("Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateResolution")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProblemText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductVersionOperatingSystemId")
                        .HasColumnType("int");

                    b.Property<string>("ResolutionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("ProductVersionOperatingSystemId");

                    b.HasIndex("StatusId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            DateCreation = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Impossible de lancer l’application sur Ubuntu 20.04, message d’erreur « library not found ».",
                            ProductVersionOperatingSystemId = 1,
                            StatusId = 1
                        },
                        new
                        {
                            TicketId = 2,
                            DateCreation = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "L’écran d’achat ne se charge pas sur certains smartphones Samsung.",
                            ProductVersionOperatingSystemId = 9,
                            ResolutionText = "Correction d’un bug de compatibilité avec Android 12.",
                            StatusId = 2
                        },
                        new
                        {
                            TicketId = 3,
                            DateCreation = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Les notifications ne fonctionnent pas après la dernière mise à jour de Windows 11.",
                            ProductVersionOperatingSystemId = 13,
                            StatusId = 1
                        },
                        new
                        {
                            TicketId = 4,
                            DateCreation = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Problème d’enregistrement des données lors de la fermeture brutale de l’application.",
                            ProductVersionOperatingSystemId = 17,
                            ResolutionText = "Mise en place d’une sauvegarde automatique régulière.",
                            StatusId = 2
                        },
                        new
                        {
                            TicketId = 5,
                            DateCreation = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Les graphiques ne s’affichent pas sur MacOS Monterey.",
                            ProductVersionOperatingSystemId = 18,
                            StatusId = 1
                        },
                        new
                        {
                            TicketId = 6,
                            DateCreation = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Impossible d’ajouter un nouveau portefeuille sur iPhone 14.",
                            ProductVersionOperatingSystemId = 6,
                            ResolutionText = "Mise à jour de l’API de gestion des portefeuilles pour corriger l’incompatibilité.",
                            StatusId = 2
                        },
                        new
                        {
                            TicketId = 7,
                            DateCreation = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Le bouton « Démarrer séance » ne répond pas sur Debian 11.",
                            ProductVersionOperatingSystemId = 7,
                            StatusId = 1
                        },
                        new
                        {
                            TicketId = 8,
                            DateCreation = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "L’application plante au démarrage sur Windows 10.",
                            ProductVersionOperatingSystemId = 8,
                            StatusId = 1
                        },
                        new
                        {
                            TicketId = 9,
                            DateCreation = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Le calendrier n’affiche plus les anciennes séances après la dernière mise à jour.",
                            ProductVersionOperatingSystemId = 34,
                            StatusId = 1
                        },
                        new
                        {
                            TicketId = 10,
                            DateCreation = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Problème de connexion au serveur lors du premier lancement.",
                            ProductVersionOperatingSystemId = 39,
                            ResolutionText = "Optimisation du processus de connexion et ajout d’un message d’attente pour l’utilisateur.",
                            StatusId = 2
                        },
                        new
                        {
                            TicketId = 11,
                            DateCreation = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "L’application ne se lance pas pour certains utilisateurs avec Windows 10.",
                            ProductVersionOperatingSystemId = 42,
                            StatusId = 1
                        },
                        new
                        {
                            TicketId = 12,
                            DateCreation = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Problème d’affichage des séances sur MacBook Air M1.",
                            ProductVersionOperatingSystemId = 33,
                            ResolutionText = "Ajout de la prise en charge native des processeurs Apple Silicon.",
                            StatusId = 2
                        },
                        new
                        {
                            TicketId = 13,
                            DateCreation = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Les notifications push ne fonctionnent plus sur Android.",
                            ProductVersionOperatingSystemId = 23,
                            StatusId = 1
                        },
                        new
                        {
                            TicketId = 14,
                            DateCreation = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Impossible de sauvegarder une simulation d’achat, message « accès refusé ».",
                            ProductVersionOperatingSystemId = 5,
                            ResolutionText = "Mise à jour des droits d’écriture dans le dossier Documents.",
                            StatusId = 2
                        },
                        new
                        {
                            TicketId = 15,
                            DateCreation = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Les rappels de séances ne s’activent pas sur certains modèles Xiaomi.",
                            ProductVersionOperatingSystemId = 30,
                            StatusId = 1
                        },
                        new
                        {
                            TicketId = 16,
                            DateCreation = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Fermeture inattendue de l’application lors de la consultation des statistiques hebdomadaires.",
                            ProductVersionOperatingSystemId = 41,
                            ResolutionText = "Correction du module d’affichage des graphiques.",
                            StatusId = 2
                        },
                        new
                        {
                            TicketId = 17,
                            DateCreation = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Les achats intégrés n’aboutissent pas pour certains utilisateurs sous iOS 17.",
                            ProductVersionOperatingSystemId = 10,
                            StatusId = 1
                        },
                        new
                        {
                            TicketId = 18,
                            DateCreation = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Crash à l’ouverture du module d’analyse graphique.",
                            ProductVersionOperatingSystemId = 16,
                            ResolutionText = "Correction d’un problème de dépendance manquante sur certaines distributions MacOS.",
                            StatusId = 2
                        },
                        new
                        {
                            TicketId = 19,
                            DateCreation = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Les utilisateurs ne peuvent pas importer leurs anciens programmes d’entraînement.",
                            ProductVersionOperatingSystemId = 25,
                            StatusId = 1
                        },
                        new
                        {
                            TicketId = 20,
                            DateCreation = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "L’application se fige lors de la recherche de nouveaux titres boursiers.",
                            ProductVersionOperatingSystemId = 4,
                            ResolutionText = "Optimisation de la requête réseau et ajout d’un indicateur de chargement.",
                            StatusId = 2
                        },
                        new
                        {
                            TicketId = 21,
                            DateCreation = new DateTime(2024, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Les alertes sonores ne fonctionnent pas sous Ubuntu 22.04.",
                            ProductVersionOperatingSystemId = 25,
                            StatusId = 1
                        },
                        new
                        {
                            TicketId = 22,
                            DateCreation = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "L’export Excel génère un fichier corrompu avec certaines versions de Microsoft Office.",
                            ProductVersionOperatingSystemId = 22,
                            ResolutionText = "Mise à jour du format d’export pour compatibilité avec Office 2019 et 365.",
                            StatusId = 2
                        },
                        new
                        {
                            TicketId = 23,
                            DateCreation = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "Les notifications ne s’affichent pas en mode économie d’énergie.",
                            ProductVersionOperatingSystemId = 32,
                            StatusId = 1
                        },
                        new
                        {
                            TicketId = 24,
                            DateCreation = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateResolution = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "L’interface graphique présente des problèmes d’affichage sur certains écrans haute résolution.",
                            ProductVersionOperatingSystemId = 6,
                            ResolutionText = "Amélioration de la gestion du DPI dans l’application.",
                            StatusId = 2
                        },
                        new
                        {
                            TicketId = 25,
                            DateCreation = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProblemText = "L’option de synchronisation avec Google Agenda ne fonctionne pas sur Android 13.",
                            ProductVersionOperatingSystemId = 43,
                            StatusId = 1
                        });
                });

            modelBuilder.Entity("Projet6.Models.Entities.ProductVersionOperatingSystem", b =>
                {
                    b.HasOne("Projet6.Models.Entities.OperatingSystem", "OperatingSystem")
                        .WithMany("ProductVersionOperatingSystems")
                        .HasForeignKey("OperatingSystemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Projet6.Models.Entities.Product", "Product")
                        .WithMany("ProductVersionOperatingSystems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Projet6.Models.Entities.Version", "Version")
                        .WithMany("ProductVersionOperatingSystems")
                        .HasForeignKey("VersionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OperatingSystem");

                    b.Navigation("Product");

                    b.Navigation("Version");
                });

            modelBuilder.Entity("Ticket", b =>
                {
                    b.HasOne("Projet6.Models.Entities.ProductVersionOperatingSystem", "ProductVersionOperatingSystem")
                        .WithMany("Tickets")
                        .HasForeignKey("ProductVersionOperatingSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Status", "Status")
                        .WithMany("Tickets")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductVersionOperatingSystem");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Projet6.Models.Entities.OperatingSystem", b =>
                {
                    b.Navigation("ProductVersionOperatingSystems");
                });

            modelBuilder.Entity("Projet6.Models.Entities.Product", b =>
                {
                    b.Navigation("ProductVersionOperatingSystems");
                });

            modelBuilder.Entity("Projet6.Models.Entities.ProductVersionOperatingSystem", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Projet6.Models.Entities.Version", b =>
                {
                    b.Navigation("ProductVersionOperatingSystems");
                });

            modelBuilder.Entity("Status", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
